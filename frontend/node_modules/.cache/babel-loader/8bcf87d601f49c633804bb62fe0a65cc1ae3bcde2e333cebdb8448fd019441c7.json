{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wajih\\\\OneDrive\\\\Bureau\\\\Wajih\\\\SearchEngine\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport { fetchProjects } from './services/projectService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [filteredProjects, setFilteredProjects] = useState([]);\n\n  // Fetch projects on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchProjects();\n        setProjects(data);\n        setFilteredProjects(data); // Initially display all projects\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Handle search and update filtered results\n  const handleSearch = query => {\n    const filtered = projects.filter(project => project.title.toLowerCase().includes(query.toLowerCase()));\n    setFilteredProjects(filtered); // Update the state with filtered results\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: filteredProjects.length > 0 ? filteredProjects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: project.image,\n          alt: project.title,\n          style: {\n            width: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: project.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"View Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No results found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"KjlkUdM40767sK2CnCLCCh89kDw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","fetchProjects","jsxDEV","_jsxDEV","App","_s","projects","setProjects","filteredProjects","setFilteredProjects","fetchData","data","error","console","handleSearch","query","filtered","filter","project","title","toLowerCase","includes","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","style","marginBottom","src","image","alt","width","href","url","target","rel","id","_c","$RefreshReg$"],"sources":["C:/Users/Wajih/OneDrive/Bureau/Wajih/SearchEngine/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport { fetchProjects } from './services/projectService';\n\nconst App = () => {\n    const [projects, setProjects] = useState([]);\n    const [filteredProjects, setFilteredProjects] = useState([]);\n\n    // Fetch projects on component mount\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const data = await fetchProjects();\n                setProjects(data);\n                setFilteredProjects(data); // Initially display all projects\n            } catch (error) {\n                console.error('Error fetching projects:', error);\n            }\n        };\n        fetchData();\n    }, []);\n\n    // Handle search and update filtered results\n    const handleSearch = (query) => {\n        const filtered = projects.filter((project) =>\n            project.title.toLowerCase().includes(query.toLowerCase())\n        );\n        setFilteredProjects(filtered);  // Update the state with filtered results\n    };\n\n    return (\n        <div>\n            <Header onSearch={handleSearch} />\n\n            {/* Display filtered projects or a message if none are found */}\n            <div className=\"search-results\">\n                {filteredProjects.length > 0 ? (\n                    filteredProjects.map((project) => (\n                        <div key={project.id} style={{ marginBottom: '20px' }}>\n                            <h2>{project.title}</h2>\n                            <img src={project.image} alt={project.title} style={{ width: '200px' }} />\n                            <p><a href={project.url} target=\"_blank\" rel=\"noopener noreferrer\">View Project</a></p>\n                        </div>\n                    ))\n                ) : (\n                    <p>No results found.</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,aAAa,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE5D;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMV,aAAa,CAAC,CAAC;QAClCM,WAAW,CAACI,IAAI,CAAC;QACjBF,mBAAmB,CAACE,IAAI,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IACDF,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,YAAY,GAAIC,KAAK,IAAK;IAC5B,MAAMC,QAAQ,GAAGV,QAAQ,CAACW,MAAM,CAAEC,OAAO,IACrCA,OAAO,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,KAAK,CAACK,WAAW,CAAC,CAAC,CAC5D,CAAC;IACDX,mBAAmB,CAACO,QAAQ,CAAC,CAAC,CAAE;EACpC,CAAC;EAED,oBACIb,OAAA;IAAAmB,QAAA,gBACInB,OAAA,CAACH,MAAM;MAACuB,QAAQ,EAAET;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGlCxB,OAAA;MAAKyB,SAAS,EAAC,gBAAgB;MAAAN,QAAA,EAC1Bd,gBAAgB,CAACqB,MAAM,GAAG,CAAC,GACxBrB,gBAAgB,CAACsB,GAAG,CAAEZ,OAAO,iBACzBf,OAAA;QAAsB4B,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAV,QAAA,gBAClDnB,OAAA;UAAAmB,QAAA,EAAKJ,OAAO,CAACC;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBxB,OAAA;UAAK8B,GAAG,EAAEf,OAAO,CAACgB,KAAM;UAACC,GAAG,EAAEjB,OAAO,CAACC,KAAM;UAACY,KAAK,EAAE;YAAEK,KAAK,EAAE;UAAQ;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1ExB,OAAA;UAAAmB,QAAA,eAAGnB,OAAA;YAAGkC,IAAI,EAAEnB,OAAO,CAACoB,GAAI;YAACC,MAAM,EAAC,QAAQ;YAACC,GAAG,EAAC,qBAAqB;YAAAlB,QAAA,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAHjFT,OAAO,CAACuB,EAAE;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACR,CAAC,gBAEFxB,OAAA;QAAAmB,QAAA,EAAG;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC1B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACtB,EAAA,CA9CID,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAgDT,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}